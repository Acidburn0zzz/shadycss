{"version":3,"file":"shadycss.min.js","sources":["css-parse.js","style-settings.js","style-util.js","style-transformer.js","template-map.js","style-info.js","object-assign.js","style-properties.js","style-placeholder.js","style-cache.js","apply-shim.js","document-watcher.js","ShadyCSS.js","custom-style.js","entry.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nlet SCOPE_NAME = 'style-scope';\n\nexport let StyleTransformer = {\n\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom: function(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  },\n\n  _transformDom: function(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  },\n\n  element: function(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            element.setAttribute(CLASS, c.replace(SCOPE_NAME, '')\n            .replace(scope, ''));\n          }\n        } else {\n          element.setAttribute(CLASS, (c ? c + ' ' : '') +\n          SCOPE_NAME + ' ' + scope);\n        }\n      }\n    }\n  },\n\n  elementStyles: function(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  },\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css: function(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  },\n\n  _calcElementScope: function (scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  },\n\n  _calcHostScope: function(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  },\n\n  rule: function (rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  },\n\n  // transforms a css rule to a scoped rule.\n  _transformRule: function(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  },\n\n  _transformRuleCss: function(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  },\n\n  _transformComplexSelector: function(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  },\n\n  _transformCompoundSelector: function(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  },\n\n  _transformSimpleSelector: function(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  },\n\n  // :host(...) -> scopeName...\n  _transformHostSelector: function(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  },\n\n  documentRule: function(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  },\n\n  normalizeRootSelector: function(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  },\n\n  _transformDocumentSelector: function(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  },\n  SCOPE_NAME: SCOPE_NAME\n};\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  static validate(elementName) {\n    const template = templateMap[elementName];\n    if (!template._invalidating) {\n      template._invalidating = true;\n      Promise.resolve(() => {\n        template._applyShimInvalid = false;\n        template._invalidating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = {};\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nfunction assign(target, ...srcs) {\n  const output = Object(target);\n  for (let i = 0; i < srcs.length; i++) {\n    let source = srcs[i];\n    if (source) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n}\n\nlet use = Object.assign || assign;\nexport default use;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\nimport assign from './object-assign';\n\n// TODO: dedupe with shady\nlet p = window.Element.prototype;\nlet matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nlet IS_IE = navigator.userAgent.match('Trident');\n\nexport let StyleProperties = {\n\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles: function(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  },\n\n  // decorate a single rule with property info\n  decorateRule: function(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  },\n\n  // collects the custom properties from a rule's cssText\n  collectProperties: function(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = this.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  },\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText: function(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  },\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText: function(cssText) {\n    return cssText.replace(this.rx.BRACKETED, '')\n      .replace(this.rx.VAR_ASSIGN, '');\n  },\n\n  collectPropertiesInCssText: function(cssText, props) {\n    let m;\n    while ((m = this.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  },\n\n  // turns custom properties into realized values.\n  reify: function(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  },\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty: function(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  },\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties: function(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        this.rx.MIXIN_MATCH.lastIndex = 0;\n        m = this.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  },\n\n  applyProperties: function(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  },\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms: function(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  },\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles: function(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  },\n\n  whenHostOrRootRule: function(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  },\n\n  hostAndRootPropertiesForScope: function(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  },\n\n  transformStyles: function(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector +\n      this.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  },\n\n  _elementKeyframeTransforms: function(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  },\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer: function(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  },\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes: function(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  },\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector: function(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  },\n\n  applyElementScopeSelector: function(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + this.XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + this.XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      // hook from ShadyDOM\n      if (element.__nativeSetAttribute) {\n        element.__nativeSetAttribute('class', v);\n      } else {\n        element.setAttribute('class', v);\n      }\n    }\n  },\n\n  applyElementStyle: function(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  },\n\n  applyCustomStyle: function(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  },\n\n  rx: StyleUtil.rx,\n  XSCOPE_NAME: 'x-scope'\n};\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\nimport assign from './object-assign';\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (this._currentTemplate && elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement &&\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classIdx = Array.from(n.classList)\n            .indexOf(StyleTransformer.SCOPE_NAME);\n          if (classIdx >= 0) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let scope = n.classList[classIdx + 1];\n            if (scope) {\n              StyleTransformer.dom(n, scope, true);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport {StyleProperties} from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush} from './document-watcher'\n\nimport assign from './object-assign'\n\nlet styleCache = new StyleCache();\n\nexport let ShadyCSS = {\n  flush: flush,\n  scopeCounter: {},\n  nativeShadow: nativeShadow,\n  nativeCss: nativeCssVariables,\n  nativeCssApply: nativeCssApply,\n  _documentOwner: document.documentElement,\n  _documentOwnerStyleInfo: StyleInfo.set(document.documentElement, new StyleInfo({rules: []})),\n  _generateScopeSelector(name) {\n    let id = this.scopeCounter[name] = (this.scopeCounter[name] || 0) + 1;\n    return name + '-' + id;\n  },\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  },\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  },\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  },\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  },\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    let ast = parse(cssText);\n    if (this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  },\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  },\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  },\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        CS._documentDirty = false;\n      }\n    }\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    assign(styleInfo.overrideStyleProperties, overrideProps);\n    if (this.nativeCss) {\n      let template = templateMap[is];\n      if (template && template._style && template._applyShimInvalid) {\n        // update template\n        if (!template._invalidating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.validate(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let style = host.shadowRoot.querySelector('style');\n          style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n      this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        // TODO: use caching\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    let root = this._isRootOwner(host) ? host : host.shadowRoot;\n    // note: some elements may not have a root!\n    if (root && root.children) {\n      this._applyToDescendants(root.children);\n    }\n  },\n  _isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  },\n  _applyToDescendants(children) {\n    for (let i = 0, c; i < children.length; i++) {\n      c = children[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      } else if (c.localName === 'slot') {\n        if (!nativeShadow) {\n          window.ShadyDOM.flush();\n        }\n        this._applyToDescendants(c.assignedNodes().filter(this._isElementNode));\n      }\n      this._applyToDescendants(c.children);\n    }\n  },\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  },\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  },\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  },\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  },\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  },\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  },\n  updateStyles(properties) {\n    if (window.CustomStyle) {\n      window.CustomStyle._documentDirty = true;\n    }\n    this.applyStyle(this._documentOwner, properties);\n  },\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  },\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  },\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  },\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  },\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    let out = classes.join(' ');\n    // use native setAttribute provided by ShadyDOM when setAttribute is patched\n    if (element.__nativeSetAttribute) {\n      element.__nativeSetAttribute('class', out);\n    } else {\n      element.setAttribute('class', out);\n    }\n  },\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = ShadyCSS;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<shady-style>\n  <style>\n  ...\n  </style>\n</shady-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    requestAnimationFrame(validateDocument);\n  } else {\n    document.addEventListener('readystatechange', function() {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\n// NOTE: Make sure to enqueue eagerly. This is an optimization that\n// helps ensure that the first run of validateDocument will actually\n// have access to all the custom-style's created via loading imports.\n// If the first created custom-style calls enqueue and HTMLImports.ready\n// is true at that time (which is the case when HTMLImports are polyfilled),\n// then the enqueue immediately calls validateDocument and work that could be\n// batched is not.\nenqueueDocumentValidation();\n\nfunction validateDocument() {\n  if (enqueued) {\n    ShadyCSS.updateStyles();\n    enqueued = false;\n  }\n}\n\nfunction CustomStyle() {\n  /*\n  Use Reflect to invoke the HTMLElement constructor, or rely on the\n  CustomElement polyfill replacement that can be `.call`ed\n  */\n  const self = (window.Reflect && Reflect.construct)\n    ? Reflect.construct(HTMLElement, [], this.constructor || CustomStyle)\n    : HTMLElement.call(this);\n  customStyles.push(self);\n  enqueueDocumentValidation();\n  return self;\n}\n\nObject.defineProperties(CustomStyle, {\n  /*\n  CustomStyle.processHook is provided to customize the <style> element child of\n  a <custom-style> element before the <style> is processed by ShadyCSS\n\n  The function must take a <style> element as input, and return nothing.\n  */\n  processHook: {\n    get() {\n      return hookFn;\n    },\n    set(fn) {\n      hookFn = fn;\n      return fn;\n    }\n  },\n  _customStyles: {\n    get() {\n      return customStyles;\n    }\n  },\n  _documentDirty: {\n    get() {\n      return enqueued;\n    },\n    set(value) {\n      enqueued = value;\n      return value;\n    }\n  }\n});\n\nCustomStyle.findStyles = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    customStyles[i]._findStyle();\n  }\n};\n\nCustomStyle._revalidateApplyShim = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    let s = customStyles[i];\n    if (s._style) {\n      ShadyCSS._revalidateApplyShim(s._style);\n    }\n  }\n}\n\nCustomStyle.applyStyles = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    customStyles[i]._applyStyle();\n  }\n};\n\nCustomStyle.prototype = Object.create(HTMLElement.prototype, {\n  'constructor': {\n    value: CustomStyle,\n    configurable: true,\n    writable: true\n  }\n});\n\nCustomStyle.prototype._findStyle = function() {\n  if (!this._style) {\n    let style = this.querySelector('style');\n    if (!style) {\n      return;\n    }\n    // HTMLImports polyfill may have cloned the style into the main document,\n    // which is referenced with __appliedElement.\n    // Also, we must copy over the attributes.\n    if (style.__appliedElement) {\n      for (let i = 0; i < style.attributes.length; i++) {\n        let attr = style.attributes[i];\n        style.__appliedElement.setAttribute(attr.name, attr.value);\n      }\n    }\n    this._style = style.__appliedElement || style;\n    if (hookFn) {\n      hookFn(this._style);\n    }\n    ShadyCSS._transformCustomStyleForDocument(this._style);\n  }\n};\n\nCustomStyle.prototype._applyStyle = function() {\n  if (this._style) {\n    ShadyCSS._applyCustomStyleToDocument(this._style);\n  }\n};\n\nwindow.customElements.define('custom-style', CustomStyle);\nwindow['CustomStyle'] = CustomStyle;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\n/*\nSmall module to load ShadyCSS and CustomStyle together\n*/\n\nimport './ShadyCSS'\nimport './custom-style'\n"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","length","n","i","l","OPEN_BRACE","rules","p","previous","push","CLOSE_BRACE","end","parent","node","t","substring","start","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","AT_START","MEDIA_START","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","nativeShadow","window","ShadyDOM","inUse","nativeCssVariables","navigator","userAgent","CSS","supports","detectNativeApply","style","document","createElement","textContent","head","appendChild","nativeCssApply","sheet","cssRules","removeChild","parseSettings","settings","shimcssproperties","shimshadow","ShadyCSS","WebComponents","flags","toCssText","callback","rulesForStyle","__cssRules","isKeyframesSelector","rule","forEachRule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","after","nextSibling","firstChild","insertBefore","setAttribute","lastHeadApplyNode","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","SCOPE_NAME","StyleTransformer","shouldRemoveScope","__styleScoped","_transformDom","nodeType","Node","ELEMENT_NODE","element","c$","localName","content","_content","childNodes","children","classList","remove","add","getAttribute","c","CLASS","styleRules","cssBuildType","__cssBuild","StyleUtil","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","call","join","stop","NTH","m","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","SELECTOR_NO_MATCH","host","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","StyleInfo","__styleInfo","styleInfo","elementName","templateMap","_applyShimInvalid","template","_invalidating","resolve","ast","placeholder","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","assign","output","Object","srcs","source","key","hasOwnProperty","use","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","props","keyframes","ruleIndex","decorateRule","index","collectPropertiesInCssText","propertyInfo","onKeyframesRule","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","VAR_ASSIGN","any","exec","collectConsumingCssText","BRACKETED","VAR_CONSUMED","name","getOwnPropertyNames","valueForProperty","property","valueForProperties","fn","propertyValue","parts","MIXIN_MATCH","lastIndex","colon","pp","slice","keyframeTransforms","input","hasAnimations","ANIMATION_MATCH","test","transform","keyframeNamesToTransform","keyframe","o","selectorToMatch","isRoot","isHost","hostProps","rootProps","whenHostOrRootRule","_element","hostSelector","rxHostSelector","hostRx","HOST_PREFIX","HOST_SUFFIX","get","_elementKeyframeTransforms","elementStyles","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","old","v","XSCOPE_NAME","__nativeSetAttribute","transformStyles","_useCount","parentNode","shadowRoot","addToBitMask","bits","parseInt","placeholderMap","ce","customElements","origDefine","define","clazz","options","StyleCache","typeMax","cache","cacheEntry","ownPropertyNames","idx","pn","tagname","styleElement","list","shift","entry","_validate","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","transformRules","transformRule","transformCssText","_consumeCssProperties","all","getComputedStyle","getPropertyValue","mixinName","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","set","dependants","f","_getInitialValueForProperty","out","sp","_replaceInitialOrInherit","invalidate","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","undefined","_invalidateMixinEntry","applyShim","flush","elementNeedsScoping","contains","SVGElement","handler","mxns","x","mxn","documentElement","addedNodes","getRootNode","DOCUMENT_FRAGMENT_NODE","dom","removedNodes","classIdx","Array","from","observer","MutationObserver","observe","childList","subtree","nativeCustomElements","delayedStart","body","HTMLImports","whenReady","readyState","listener","removeEventListener","addEventListener","takeRecords","styleCache","id","scopeCounter","styles","querySelectorAll","querySelector","_prepared","_getCssBuild","_gatherStyles","nativeCss","_styleAst","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_cssBuild","overrideProps","CustomStyle","CS","_documentDirty","findStyles","_updateProperties","_documentOwner","_documentOwnerStyleInfo","_revalidateApplyShim","applyStyles","_prepareHost","validate","_updateNativeProperties","_applyStyleProperties","_isRootOwner","_applyToDescendants","assignedNodes","filter","_isElementNode","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","hostAndRootPropertiesForScope","propertyData","propertyDataFromStyles","propertiesMatchingHost","_mixinOverrideStyles","reify","overrides","removeProperty","setProperty","documentRule","applyCustomStyle","classString","classes","scopeName","classAttr","k$","enqueued","customStyles","hookFn","enqueueDocumentValidation","validateDocument","updateStyles","Reflect","construct","HTMLElement","constructor","defineProperties","_findStyle","_applyStyle","__appliedElement","attributes","attr","_transformCustomStyleForDocument","_applyCustomStyleToDocument"],"mappings":"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","sourceRoot":"/source/"}